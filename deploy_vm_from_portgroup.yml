---
- name: "Check if VM already exists {{ vm_name }}"
  community.vmware.vmware_guest_info:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: "{{ vcenter_validate_certs }}"
    datacenter: "{{ vc_datacenter }}"
    name: "{{ vm_name }}"
  register: vm_info
  failed_when: false

- name: "Deploy VM from Content Library template when absent {{ vm_name }}"
  when:
    - not vm_info.instance is defined
    - content_library_item_type == 'template'
  vmware.vmware.deploy_content_library_template:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: "{{ vcenter_validate_certs }}"
    datacenter: "{{ vc_datacenter }}"
    vm_name: "{{ vm_name }}"
    library_item_name: "{{ content_library_template }}"
    library_name: "{{ (content_library_name | length > 0) | ternary(content_library_name, omit) }}"
    datastore: "{{ vc_datastore }}"
    cluster: "{{ vc_cluster }}"
    vm_folder: "{{ (vc_folder | length > 0) | ternary(vc_folder, omit) }}"
    power_on_after_deploy: false

- name: "Deploy VM from Content Library OVF when absent {{ vm_name }}"
  when:
    - not vm_info.instance is defined
    - content_library_item_type == 'ovf'
  vmware.vmware.deploy_content_library_ovf:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: "{{ vcenter_validate_certs }}"
    datacenter: "{{ vc_datacenter }}"
    vm_name: "{{ vm_name }}"
    library_item_name: "{{ content_library_template }}"
    library_name: "{{ (content_library_name | length > 0) | ternary(content_library_name, omit) }}"
    datastore: "{{ vc_datastore }}"
    cluster: "{{ vc_cluster }}"
    vm_folder: "{{ (vc_folder | length > 0) | ternary(vc_folder, omit) }}"
    power_on_after_deploy: false

- name: "Connect first NIC of VM to desired port group {{ vm_name }}"
  community.vmware.vmware_guest:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: "{{ vcenter_validate_certs }}"
    datacenter: "{{ vc_datacenter }}"
    cluster: "{{ vc_cluster }}"
    name: "{{ vm_name }}"
    state: present
    networks:
      - name: "{{ portgroup }}"
        start_connected: true
        connected: true
  register: net_change

- name: "Power on the VM {{ vm_name }}"
  community.vmware.vmware_guest_powerstate:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: "{{ vcenter_validate_certs }}"
    datacenter: "{{ vc_datacenter }}"
    name: "{{ vm_name }}"
    state: powered-on

